{"title":"java调用phantomjs爬取网页及快照","slug":"20180129","date":"2018-01-29T13:11:33.000Z","updated":"2018-05-10T09:28:46.886Z","comments":true,"path":"api/articles/20180129.json","excerpt":" [Figure] ","covers":["/static/images/phantomjs.png"],"content":"<p><img src=\"/static/images/phantomjs.png\" alt=\"phantomjs-png\"><br><a id=\"more\"></a></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>前阵子遇到一个需求，需要爬取学信网学历的查询结果进行解析并截图留证，利用java完成了爬取的html解析功能后发现截图较为困难。我偶然发现了 phantomjs，可以由服务端去做类似爬虫的操作来爬取html和保存图片，正好满足上述两个需求。</p>\n<h1 id=\"phantomjs\"><a href=\"#phantomjs\" class=\"headerlink\" title=\"phantomjs\"></a>phantomjs</h1><p><a href=\"http://phantomjs.org\" target=\"_blank\" rel=\"noopener\">官方网站: phantomjs.org</a><br>phantomjs 是 一个基于 webkit 内核的无头浏览器，没有 UI 界面。它就是一个浏览器，只是内部的点击、翻页等人为相关操作需要程序设计实现。</p>\n<p>提供了 javascript API 接口，可以通过 js 直接与 webkit 内核交互，在此之上可以结合 Java 语言等，通过 Java 调用 js 等相关操作，从而解决了以前 c/c++ 才能比较好的基于 webkit 开发优质采集器的限制。</p>\n<p>提供了 windows、linux、mac 等不同 OS 的安装使用包，也就是说可以在不同平台上，二次开发采集项目（爬虫）或是自动项目测试等工作。</p>\n<h2 id=\"常用内置对象\"><a href=\"#常用内置对象\" class=\"headerlink\" title=\"常用内置对象\"></a>常用内置对象</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 获得系统操作对象，包括命令行参数、phantomjs系统设置等信息</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> system = <span class=\"built_in\">require</span>(<span class=\"string\">'system'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 获取操作dom或web网页的对象，通过它可以打开网页、接收网页内容、request、response参数，其为最核心对象。</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> page = <span class=\"built_in\">require</span>(<span class=\"string\">'webpage'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 获取文件系统对象，通过它可以操作操作系统的文件操作，包括read、write、move、copy、delete等。</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"常用API\"><a href=\"#常用API\" class=\"headerlink\" title=\"常用API\"></a>常用API</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 通过page对象通过url链接打开页面，加载完成后回调</span></span><br><span class=\"line\">page.open(url, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">status</span>) </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"comment\">// 当page.open调用时，会首先执行该函数，在此可以预置一些参数或函数，用于后边的回调函数中</span></span><br><span class=\"line\">page.onLoadStarted = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"comment\">// page的所要加载的资源在加载过程中，失败回调处理</span></span><br><span class=\"line\">page.onResourceError = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resourceError</span>) </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"comment\">// page的所要加载的资源在发起请求时，可以回调该函数</span></span><br><span class=\"line\">page.onResourceRequested = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">requestData, networkRequest</span>) </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"comment\">// page的所要加载的资源在加载过程中，每加载一个相关资源，都会在此先做出响应，</span></span><br><span class=\"line\"><span class=\"comment\">// 它相当于http头部分，核心回调对象为response，可以获取本次请求的cookies、userAgent等</span></span><br><span class=\"line\">page.onResourceReceived = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">response</span>) </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"comment\">// 打印一些输出信息到控制台</span></span><br><span class=\"line\">page.onConsoleMessage = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">msg</span>) </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"comment\">// alert也是无法直接弹出的，但可以回调alert的内容</span></span><br><span class=\"line\">page.onAlert = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">msg</span>) </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"comment\">// 当page.open时，http请求（不包括所引起的其它的加载资源）出现了异常，</span></span><br><span class=\"line\"><span class=\"comment\">// 如404、no route to web site等，都会在此回调显示。</span></span><br><span class=\"line\">page.onError = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">msg, trace</span>) </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"comment\">// 当page.open打开的url，或者是在打开过程中进行了跳转，可以在这个函数中回调。</span></span><br><span class=\"line\">page.onUrlChanged = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">targetUrl</span>) </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"comment\">// 当page.open的目标URL被真正打开后，会在调用open的回调函数前调用该函数，在此可以进行内部的翻页等操作</span></span><br><span class=\"line\">page.onLoadFinished = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">status</span>) </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"comment\">// 在所加载的web page内部执行该函数，像翻页、点击、滑动等，均可在此中执行</span></span><br><span class=\"line\">page.evaluate(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 将当前page的现状渲染成图片，输出到指定的文件中去。</span></span><br><span class=\"line\">page.render(<span class=\"string\">\"\"</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"调用方式\"><a href=\"#调用方式\" class=\"headerlink\" title=\"调用方式\"></a>调用方式</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> /bin/phantomjs [配置文件(js文件)] [参数1] [参数2] [参数3] ...</span><br></pre></td></tr></table></figure>\n<h1 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h1><p>java使用java.lang.Runtime调用，接收返回结果进行操作</p>\n<h2 id=\"config-js-配置文件内容\"><a href=\"#config-js-配置文件内容\" class=\"headerlink\" title=\"config.js 配置文件内容\"></a>config.js 配置文件内容</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> page = <span class=\"built_in\">require</span>(<span class=\"string\">'webpage'</span>).create();</span><br><span class=\"line\"><span class=\"keyword\">var</span> system = <span class=\"built_in\">require</span>(<span class=\"string\">'system'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> ssionid = system.args[<span class=\"number\">1</span>]; </span><br><span class=\"line\"><span class=\"keyword\">var</span> address = system.args[<span class=\"number\">2</span>]; <span class=\"comment\">// 请求地址，url</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> output = system.args[<span class=\"number\">3</span>]; <span class=\"comment\">// 输出</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> pageWidth = <span class=\"number\">1366</span>; <span class=\"comment\">//初始化游览器宽</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> pageHeight = <span class=\"number\">1080</span>; <span class=\"comment\">//初始化游览器高</span></span><br><span class=\"line\">page.viewportSize = &#123; <span class=\"attr\">width</span>: pageWidth, <span class=\"attr\">height</span>: pageHeight &#125;; <span class=\"comment\">//初始化游览器</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 添加ssionid至cookie</span></span><br><span class=\"line\">phantom.addCookie(&#123;</span><br><span class=\"line\">  <span class=\"string\">'name'</span>     : <span class=\"string\">'JSESSIONID'</span>,  </span><br><span class=\"line\">  <span class=\"string\">'value'</span>    : ssionid,  </span><br><span class=\"line\">  <span class=\"string\">'domain'</span>   : <span class=\"string\">'job.chsi.com.cn'</span>,</span><br><span class=\"line\">  <span class=\"string\">'path'</span>     : <span class=\"string\">'/'</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">//打开地址</span></span><br><span class=\"line\">page.open(address, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">status</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 打开完毕</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (status === <span class=\"string\">\"success\"</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// dom操作</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> rect = page.evaluate(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> html = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">'html'</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(html &amp;&amp; html.length &gt; <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(html[<span class=\"number\">0</span>].innerHTML.indexOf(<span class=\"string\">'id=\"contMain\"'</span>) &lt; <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">                    offset : html[<span class=\"number\">0</span>].getBoundingClientRect(),</span><br><span class=\"line\">                    innerHTML :  html[<span class=\"number\">0</span>].innerHTML   </span><br><span class=\"line\">                &#125;;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!rect)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(output);</span><br><span class=\"line\">            page.close();</span><br><span class=\"line\">            phantom.exit();</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(rect.innerHTML); <span class=\"comment\">// 输出html</span></span><br><span class=\"line\">        page.clipRect = &#123; <span class=\"comment\">//设置截取区域(此设置为全屏)</span></span><br><span class=\"line\">          top:<span class=\"number\">0</span>,</span><br><span class=\"line\">          left:<span class=\"number\">0</span>,</span><br><span class=\"line\">          width:rect.offset.width,</span><br><span class=\"line\">          height:rect.offset.height</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        <span class=\"built_in\">window</span>.setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">          page.render(output); <span class=\"comment\">// 输出</span></span><br><span class=\"line\">          page.close(); <span class=\"comment\">// 关闭</span></span><br><span class=\"line\">          phantom.exit(); <span class=\"comment\">// 退出</span></span><br><span class=\"line\">        &#125;, <span class=\"number\">200</span>); </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置文件总结\"><a href=\"#配置文件总结\" class=\"headerlink\" title=\"配置文件总结\"></a>配置文件总结</h3><ul>\n<li>output为输出方式， 为输出的绝对路径(例如:’c:/123.jpg’)， 以后缀决定文件格式. 建议使用pdf格式， pdf格式目前测试来看没有出现问题， 图片则出现过背景颜色丢失的情况</li>\n<li>console.log(page.renderBase64(‘JPEG’)) 以Base64的格式输出至控制台</li>\n<li>这里是因为同时进行html爬取和截图快照， 所以不使用Base64的方式， 且输出的字符串有长度限制， 建议不要大量console.log()， 否则后面的内容可能会缺失</li>\n<li>page.evaluate内可进行dom操作， 这里只取了html， 同理可有规则的针对爬取想要的页面信息</li>\n<li>addCookie会返回一个boolean值， 有见到别人的文章判断了这个值才进行后续操作，  但我测试来看是有bug的， 即使成功也返回了false</li>\n<li>可以利用dom操作获取元素的位置及宽高对clipRect进行设置， 可达对想要的区域截图的目的， 例如截取某个div中的内容</li>\n</ul>\n<h2 id=\"java封装\"><a href=\"#java封装\" class=\"headerlink\" title=\"java封装\"></a>java封装</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">phantomjs</span><span class=\"params\">(String confPath, String url, String ssionId, String outPath)</span> </span>&#123;</span><br><span class=\"line\">  StringBuilder sb = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">  InputStream is = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  InputStreamReader isr = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  BufferedReader br = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    String cmd = <span class=\"string\">\"phantomjs \"</span> + confPath + <span class=\"string\">\" \"</span> + ssionId + <span class=\"string\">\" \"</span> + url + <span class=\"string\">\" \"</span> + outPath;</span><br><span class=\"line\">    Process ps = Runtime.getRuntime().exec(cmd);</span><br><span class=\"line\">    is = ps.getInputStream();</span><br><span class=\"line\">    isr = <span class=\"keyword\">new</span> InputStreamReader(is, <span class=\"string\">\"utf-8\"</span>); <span class=\"comment\">// 注意编码格式</span></span><br><span class=\"line\">    br = <span class=\"keyword\">new</span> BufferedReader(isr);</span><br><span class=\"line\">    String tmp;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> ((tmp = br.readLine()) != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">      sb.append(tmp);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">    e.printStackTrace();</span><br><span class=\"line\">  &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">    e.printStackTrace();</span><br><span class=\"line\">  &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">    IOUtils.closeQuietly(br); <span class=\"comment\">// 注意关闭流</span></span><br><span class=\"line\">    IOUtils.closeQuietly(isr);</span><br><span class=\"line\">    IOUtils.closeQuietly(is);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  String html = sb.toString();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (html.contains(filePath)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> html;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"java封装总结\"><a href=\"#java封装总结\" class=\"headerlink\" title=\"java封装总结\"></a>java封装总结</h3><ul>\n<li>我这里直接使用phantomjs是因为设置了环境变量， 否则请使用文件的绝对路径</li>\n<li>编码格式尤为重要， 否则将出现html乱码问题</li>\n</ul>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>phantomjs的功能非常强大，使用起来也是非常简单的。本文中只是一些简单的使用，更多的请自行查看<a href=\"http://phantomjs.org/api/webpage/\" target=\"_blank\" rel=\"noopener\">官方API</a>。</p>\n<h1 id=\"致谢\"><a href=\"#致谢\" class=\"headerlink\" title=\"致谢\"></a>致谢</h1><p>这是我第一篇hexo文章，在<a href=\"https://bingozb.github.io/51.html\" target=\"_blank\" rel=\"noopener\">Bingo phantomjs</a>的文章中得到了大量素材与灵感，以此致谢。</p>\n","categories":[{"name":"爬虫","path":"api/categories/爬虫.json"}],"tags":[{"name":"phantomjs","path":"api/tags/phantomjs.json"},{"name":"爬虫","path":"api/tags/爬虫.json"},{"name":"网页快照","path":"api/tags/网页快照.json"},{"name":"javascript","path":"api/tags/javascript.json"},{"name":"java","path":"api/tags/java.json"}]}