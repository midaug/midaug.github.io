{"title":"leetCode习题(简单难度)-int数组去重","slug":"2018031701","date":"2018-03-17T05:33:33.000Z","updated":"2018-05-10T09:28:46.886Z","comments":true,"path":"api/articles/2018031701.json","excerpt":"题目内容给定一个有序数组，你需要原地删除其中的重复内容，使每个元素只出现一次,并返回新的长度。<br>不要另外定义一个数组，您必须通过用 O(1) 额外内存原地修改输入的数组来做到这一点。<br>示例：<br>给定数组: nums = [1,1,2],<br>你的函数应该返回新长度 2, 并且原数组nums的前两个元素必须是1和2<br>不需要理会新的数组长度后面的元素","covers":null,"content":"<h1 id=\"题目内容\"><a href=\"#题目内容\" class=\"headerlink\" title=\"题目内容\"></a>题目内容</h1><p>给定一个<span style=\"border-bottom:2px dashed #fc6423;\">有序数组</span>，你需要原地删除其中的重复内容，使每个元素只出现一次,并返回新的长度。<br><span style=\"border-bottom:2px dashed #fc6423;\">不要另外定义一个数组</span>，您必须通过用 O(1) 额外内存<span style=\"border-bottom:2px dashed #fc6423;\">原地修改</span>输入的数组来做到这一点。<br>示例：<br>给定数组: nums = [1,1,2],<br>你的函数应该返回新长度 2, 并且原数组nums的前两个元素必须是1和2<br>不需要理会新的数组长度后面的元素</p>\n<a id=\"more\"></a>\n<h1 id=\"解法\"><a href=\"#解法\" class=\"headerlink\" title=\"解法\"></a>解法</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.mid.test;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LeetCode002</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span>[] nums = &#123; <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span> &#125;;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> newLength = removeDuplicates(nums);</span><br><span class=\"line\">\t\tSystem.out.println(newLength);</span><br><span class=\"line\">\t\tSystem.out.println(Arrays.toString(Arrays.copyOf(nums, newLength)));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">removeDuplicates</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> len = nums.length;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (len &lt; <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> len;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> end = <span class=\"number\">0</span>; <span class=\"comment\">//新数组长度</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (nums[i] != nums[end]) &#123; <span class=\"comment\">//不同时将不同的值放置在新数组的下一个位置</span></span><br><span class=\"line\">\t\t\t\tend++;</span><br><span class=\"line\">\t\t\t\tnums[end] = nums[i];</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> end + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h1><p>我之前的思路有所差异是将相同的往后移<br>新的想法：将不同的往对应顺序上塞</p>\n","categories":[{"name":"leetCode","path":"api/categories/leetCode.json"}],"tags":[{"name":"leetCode","path":"api/tags/leetCode.json"},{"name":"算法","path":"api/tags/算法.json"},{"name":"java","path":"api/tags/java.json"}]}